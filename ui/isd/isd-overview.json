{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "datasource",
          "uid": "grafana"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "description": "ISD Overview",
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 48,
  "links": [
    {
      "asDropdown": true,
      "icon": "external link",
      "includeVars": false,
      "keepTime": false,
      "tags": [
        "ISD"
      ],
      "targetBlank": false,
      "title": "ISD",
      "type": "dashboards"
    }
  ],
  "liveNow": false,
  "panels": [
    {
      "collapsed": false,
      "datasource": {
        "type": "prometheus",
        "uid": "ds-prometheus"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 8,
      "panels": [],
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "ds-prometheus"
          },
          "refId": "A"
        }
      ],
      "title": "Stations / 气象站点",
      "type": "row"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "ds-meta"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#746c9ee6",
                "value": null
              }
            ]
          },
          "unit": "locale"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 9,
        "x": 0,
        "y": 1
      },
      "id": 40,
      "options": {
        "colorMode": "background",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "value_and_name"
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "ds-meta"
          },
          "editorMode": "code",
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT count(*) AS \"Station Count\" FROM isd.station\nWHERE period && daterange($__timeFrom()::DATE, $__timeTo()::DATE, '[]');",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "ds-meta"
          },
          "editorMode": "code",
          "format": "table",
          "group": [],
          "hide": true,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- SELECT count(*) AS \"Station (Selected)\"\n-- FROM isd.station \n-- WHERE period && daterange($__timeFrom()::DATE, $__timeTo()::DATE, '[]');",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "ds-meta"
          },
          "editorMode": "code",
          "format": "table",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT reltuples AS \"Daily Records\" from pg_class where oid = 'isd.daily'::RegClass;",
          "refId": "C",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "ds-meta"
          },
          "editorMode": "code",
          "format": "table",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT reltuples AS \"Monthly Records\" from pg_class where oid = 'isd.monthly'::RegClass;",
          "refId": "D",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "ds-meta"
          },
          "editorMode": "code",
          "format": "table",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT reltuples AS \"Annual Records\" from pg_class where oid = 'isd.yearly'::RegClass;",
          "refId": "E",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "transformations": [],
      "type": "stat"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "ds-meta"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "fixed"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "links": [
            {
              "targetBlank": false,
              "title": "ISD Station : ${__data.fields.station}",
              "url": "/d/isd-station?var-station=${__data.fields.station}"
            },
            {
              "title": "ISD Country : ${__data.fields.Country} | ${__data.fields.国家}",
              "url": "/d/isd-country?var-country=${__data.fields.country}"
            }
          ],
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 25,
        "w": 15,
        "x": 9,
        "y": 1
      },
      "id": 47,
      "options": {
        "basemap": {
          "config": {},
          "name": "Layer 0",
          "type": "default"
        },
        "controls": {
          "mouseWheelZoom": true,
          "showAttribution": true,
          "showDebug": false,
          "showMeasure": false,
          "showScale": false,
          "showZoom": true
        },
        "layers": [
          {
            "config": {
              "blur": 15,
              "radius": 5,
              "weight": {
                "field": "weight",
                "fixed": 1,
                "max": 1,
                "min": 0
              }
            },
            "filterData": {
              "id": "byRefId",
              "options": "A"
            },
            "location": {
              "latitude": "latitude",
              "longitude": "longitude",
              "mode": "coords"
            },
            "name": "Station",
            "opacity": 0.8,
            "tooltip": true,
            "type": "heatmap"
          }
        ],
        "tooltip": {
          "mode": "details"
        },
        "view": {
          "allLayers": false,
          "id": "e-asia",
          "lastOnly": false,
          "lat": 33,
          "layer": "Station",
          "lon": 120,
          "padding": 1,
          "zoom": 4
        }
      },
      "pluginVersion": "10.0.1",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "ds-meta"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT station, s.name, ST_AsText(location) as location, s.period,longitude,latitude,elevation,country\n     , w.iso2,  w.name_en AS \"Country\", w.name_cn AS \"国家\",\n       CASE WHEN (now() - upper(period)) < '30d' THEN 50 ELSE 10 END AS weight\nFROM isd.station s LEFT JOIN isd.world w ON s.country = w.fips\nWHERE period && daterange($__timeFrom()::DATE, $__timeTo()::DATE) AND NOT (longitude =0 and latitude = 0);",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Station Map",
      "type": "geomap"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "ds-meta"
      },
      "description": "Observation station count",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "#746c9ee6",
            "mode": "fixed"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 75,
            "gradientMode": "hue",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#746c9ee6",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 9,
        "x": 0,
        "y": 5
      },
      "id": 45,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "ds-meta"
          },
          "editorMode": "code",
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT time, count FROM\n(\n    SELECT date_trunc('year', d)::DATE AS time\n    FROM generate_series($__timeFrom()::DATE - interval '1y', $__timeTo()::DATE + interval '1 year', '1 year') d\n) tt LEFT JOIN LATERAL ( SELECT count(*) AS count FROM isd.station WHERE period @> time ) c ON TRUE;\n\n-- SELECT time, count FROM\n--     (\n--         SELECT date_trunc('month', d)::DATE AS time\n--         FROM generate_series($__timeFrom()::DATE - interval '1y', $__timeTo()::DATE + interval '1 year', '1 month') d\n--     ) tt LEFT JOIN LATERAL ( SELECT count(*) AS count FROM isd.station WHERE period @> time ) c ON TRUE;",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Stations",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {},
            "renameByName": {
              "value": "Count"
            }
          }
        }
      ],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "ds-meta"
      },
      "description": "Station number by country",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "links": [
            {
              "title": "ISD Country : ${__data.fields.name_en} / ${__data.fields.name_cn}",
              "url": "/d/isd-country?var-country=${__data.fields.country}"
            }
          ],
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "red",
                "value": null
              },
              {
                "color": "orange",
                "value": 1
              },
              {
                "color": "#f5a673",
                "value": 10
              },
              {
                "color": "#b783afe6",
                "value": 100
              },
              {
                "color": "#365083e6",
                "value": 1000
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 13,
        "w": 9,
        "x": 0,
        "y": 13
      },
      "id": 46,
      "options": {
        "labelFields": [
          "name_en",
          "name_cn",
          "iso2",
          "iso3"
        ],
        "sizeField": "count",
        "textField": "country",
        "tiling": "treemapSquarify"
      },
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "ds-meta"
          },
          "editorMode": "code",
          "format": "table",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT country,\n       count,\n       name_cn          AS name_cn,\n       name_en          AS name_en,\n       'ISO2: ' || iso2 AS iso2,\n       'ISO3: ' || iso3 AS iso3\n       --, name_en, name_cn \nFROM (\n        SELECT country, count(*)\n        FROM isd.station\n        WHERE period && daterange($__timeFrom()::DATE, $__timeTo()::DATE, '[]')\nGROUP BY country ORDER BY 2 DESC) ss\nJOIN isd.world w ON ss.country = w.fips ORDER BY 2 DESC;",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Countries",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {},
            "renameByName": {
              "value": "Count"
            }
          }
        }
      ],
      "type": "marcusolsson-treemap-panel"
    },
    {
      "collapsed": true,
      "datasource": {
        "type": "prometheus",
        "uid": "ds-prometheus"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 26
      },
      "id": 31,
      "panels": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "ds-meta"
          },
          "description": "Observation count = Station x Day",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "bars",
                "fillOpacity": 66,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "lineInterpolation": "linear",
                "lineWidth": 0,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "locale"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 27
          },
          "id": 44,
          "options": {
            "legend": {
              "calcs": [],
              "displayMode": "list",
              "placement": "bottom",
              "showLegend": true
            },
            "tooltip": {
              "mode": "multi",
              "sort": "none"
            }
          },
          "targets": [
            {
              "datasource": {
                "type": "postgres",
                "uid": "ds-meta"
              },
              "editorMode": "code",
              "format": "time_series",
              "group": [],
              "metricColumn": "none",
              "rawQuery": true,
              "rawSql": "SELECT ts AS time, sum(count) AS value FROM isd.yearly WHERE $__timeFilter(ts) GROUP BY ts ORDER BY ts;",
              "refId": "A",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "column"
                  }
                ]
              ],
              "sql": {
                "columns": [
                  {
                    "parameters": [],
                    "type": "function"
                  }
                ],
                "groupBy": [
                  {
                    "property": {
                      "type": "string"
                    },
                    "type": "groupBy"
                  }
                ],
                "limit": 50
              },
              "timeColumn": "time",
              "where": [
                {
                  "name": "$__timeFilter",
                  "params": [],
                  "type": "macro"
                }
              ]
            }
          ],
          "title": "Observations",
          "transformations": [
            {
              "id": "organize",
              "options": {
                "excludeByName": {},
                "indexByName": {},
                "renameByName": {
                  "value": "Records"
                }
              }
            }
          ],
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "ds-meta"
          },
          "fieldConfig": {
            "defaults": {
              "custom": {
                "align": "center",
                "cellOptions": {
                  "type": "auto"
                },
                "filterable": false,
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "count"
                },
                "properties": [
                  {
                    "id": "custom.cellOptions",
                    "value": {
                      "mode": "gradient",
                      "type": "gauge"
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "range"
                },
                "properties": [
                  {
                    "id": "custom.cellOptions",
                    "value": {
                      "type": "json-view"
                    }
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 12,
            "w": 9,
            "x": 0,
            "y": 35
          },
          "id": 17,
          "options": {
            "cellHeight": "sm",
            "footer": {
              "countRows": false,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true
          },
          "pluginVersion": "10.0.1",
          "targets": [
            {
              "datasource": {
                "type": "postgres",
                "uid": "ds-meta"
              },
              "format": "table",
              "group": [],
              "metricColumn": "none",
              "rawQuery": true,
              "rawSql": "SELECT bin, coalesce(r, 'N/A') AS range, count\nFROM (\n         SELECT bin, ((bin - 1) * 1000)::TEXT || ' ~ ' || (bin * 1000)::TEXT AS r, count(name) AS count\n         FROM (SELECT name, width_bucket(elevation, 0, 10000, 10) AS bin FROM isd.station) t\n         GROUP BY bin\n         ORDER BY bin DESC NULLS LAST\n     ) d;",
              "refId": "A",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "column"
                  }
                ]
              ],
              "timeColumn": "time",
              "where": [
                {
                  "name": "$__timeFilter",
                  "params": [],
                  "type": "macro"
                }
              ]
            }
          ],
          "title": "Station Altitude Distriubtion",
          "transformations": [
            {
              "id": "organize",
              "options": {
                "excludeByName": {
                  "bin": true
                },
                "indexByName": {},
                "renameByName": {}
              }
            }
          ],
          "type": "table"
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "ds-meta"
          },
          "fieldConfig": {
            "defaults": {
              "custom": {
                "align": "auto",
                "cellOptions": {
                  "type": "auto"
                },
                "filterable": false,
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "ID"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 40
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Comment"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 120
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Coverage"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 100
                  },
                  {
                    "id": "unit",
                    "value": "percent"
                  },
                  {
                    "id": "decimals",
                    "value": 2
                  },
                  {
                    "id": "custom.cellOptions",
                    "value": {
                      "type": "color-text"
                    }
                  },
                  {
                    "id": "thresholds",
                    "value": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "red"
                        },
                        {
                          "color": "red",
                          "value": 0.1
                        },
                        {
                          "color": "orange",
                          "value": 1
                        },
                        {
                          "color": "yellow",
                          "value": 5
                        },
                        {
                          "color": "super-light-green",
                          "value": 10
                        },
                        {
                          "color": "green",
                          "value": 50
                        },
                        {
                          "color": "blue",
                          "value": 75
                        }
                      ]
                    }
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "Category"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 200
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 12,
            "w": 15,
            "x": 9,
            "y": 35
          },
          "id": 37,
          "options": {
            "cellHeight": "sm",
            "footer": {
              "countRows": false,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": [
              {
                "desc": true,
                "displayName": "coverage"
              }
            ]
          },
          "pluginVersion": "10.0.1",
          "targets": [
            {
              "datasource": {
                "type": "postgres",
                "uid": "ds-meta"
              },
              "editorMode": "code",
              "format": "table",
              "group": [],
              "metricColumn": "none",
              "rawQuery": true,
              "rawSql": "SELECT * FROM isd.element;",
              "refId": "A",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "column"
                  }
                ]
              ],
              "sql": {
                "columns": [
                  {
                    "parameters": [],
                    "type": "function"
                  }
                ],
                "groupBy": [
                  {
                    "property": {
                      "type": "string"
                    },
                    "type": "groupBy"
                  }
                ],
                "limit": 50
              },
              "timeColumn": "time",
              "where": [
                {
                  "name": "$__timeFilter",
                  "params": [],
                  "type": "macro"
                }
              ]
            }
          ],
          "title": "Observation Element Coverage",
          "transformations": [
            {
              "id": "organize",
              "options": {
                "excludeByName": {},
                "indexByName": {},
                "renameByName": {
                  "coverage": "Coverage",
                  "id": "ID",
                  "name": "Element",
                  "name_cn": "Comment",
                  "section": "Category"
                }
              }
            }
          ],
          "type": "table"
        }
      ],
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "ds-prometheus"
          },
          "refId": "A"
        }
      ],
      "title": "Observation Stats / 数据统计",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 27
      },
      "id": 48,
      "panels": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "ds-meta"
          },
          "gridPos": {
            "h": 27,
            "w": 24,
            "x": 0,
            "y": 28
          },
          "id": 19,
          "options": {
            "followTheme": false,
            "getOption": "// data: extract and transform grafana data\nfunction parse_grafana_data(d) {\n    var rawData = []\n    if (data.series[0].fields[0].values.buffer === undefined) {\n        rawData = d.series[0].fields.map((e) => {\n            return e.values\n        })\n    } else { // large dataset will have their data inside a buffer\n        rawData = d.series[0].fields.map((e) => {\n            return e.values.buffer\n        })\n    }\n    var nDim = rawData.length\n    var nItem = rawData[0].length\n    var result = []\n    for (var i = 0; i < nItem; i++) {    // item\n        result[i] = []\n        for (var j = 0; j < nDim; j++) {  // dimension\n            result[i][j] = rawData[j][i]\n        }\n    }\n    return result\n}\n\nvar mapData = parse_grafana_data(data)\n\n\n// event: resize after window resize\nwindow.onresize = function () {\n    echartsInstance.resize()\n}\n\n// event: reset symbol size on geo zoom\nechartsInstance.on(\"georoam\", function (params) {\n    var zoomLevel = echartsInstance.getOption().geo[0].zoom\n    var symbolSize = 3 * Math.sqrt(zoomLevel)\n    echartsInstance.setOption({\n        series: [{symbolSize: symbolSize}]\n    })\n});\n\n// event: jump to station main page when click symbol\nechartsInstance.on(\"click\", {seriesName: 'station'}, function (params) {\n    window.location = '/d/isd-station?var-station=' + params.data[4]\n})\n\n// final option\nvar option = {\n    title: {\n        text: 'World Integrated Surface Stations',\n        subtext: 'Click station mark for detail info',\n        top: '2%',\n        right: '2%'\n    },\n    geo: {\n        map: 'world',\n        show: true,\n        center: [0, 20],\n        zoom: 1.6,\n        roam: true\n    },\n    visualMap: {\n        show: false,\n        left: 'right',\n        min: 0,\n        max: 2,\n        inRange: {\n            color: ['#A0A4AA', '#8AB8FF', '#73BF7B']\n        },\n        text: ['Active', 'Silent'],\n        calculable: true\n    },\n    series: [\n        {\n            type: 'scatter',\n            name: 'station',\n            coordinateSystem: 'geo',\n            symbol: 'circle',\n            symbolSize: 5,\n            data: mapData,\n            label: {\n                fontFamily: 'sans-serif',\n                formatter: function (param) {\n                    var pasca = param.value[6]\n                    if (pasca != null) {\n                        pasca = Math.round(pasca / 10)\n                    } else {\n                        pasca = 'N/A '\n                    }\n                    return \"\"\n                        + '{a|' + param.value[3] + '}\\n'            // station name\n                        + '{b|Station : ' + param.value[4] + '}\\n'  // station id\n                        + '{b|Location: (' + param.value[0] + ', ' + param.value[1] + ', ' + param.value[2] + ')}\\n' // location\n                        + '{b|Country : ' + param.value[6] + '}\\n'  // Country\n                        + '{b|LastSeen: ' + param.value[5] + '}\\n'  // Last Update Time\n                },\n                rich: {\n                    a: {\n                        color: 'blue',\n                        fontSize: 14,\n                        fontWeight: 'bold',\n                        lineHeight: 22\n                    },\n                    b: {\n                        lineHeight: 12,\n                        color: 'black'\n                    },\n                },\n                position: 'right',\n                show: false\n            },\n            emphasis: {\n                label: {\n                    show: true\n                }\n            }\n        }\n    ]\n};\n\nreturn option;"
          },
          "pluginVersion": "7.1.3",
          "targets": [
            {
              "datasource": {
                "type": "postgres",
                "uid": "ds-meta"
              },
              "editorMode": "code",
              "format": "table",
              "group": [],
              "metricColumn": "none",
              "rawQuery": true,
              "rawSql": "SELECT longitude,latitude,elevation,name,station,upper(period)::DATE::TEXT AS mtime,country,\n       CASE\n           WHEN upper(period) >= date_trunc('month', CURRENT_DATE) THEN 2\n           WHEN upper(period) >= date_trunc('year', CURRENT_DATE) THEN 1\n           ELSE 0 END AS category -- 0 active in this month, 1 active in this year, 0 default\nFROM isd.station\nWHERE period && daterange($__timeFrom()::DATE, $__timeTo()::DATE);",
              "refId": "A",
              "select": [
                [
                  {
                    "params": [
                      "longitude"
                    ],
                    "type": "column"
                  }
                ]
              ],
              "sql": {
                "columns": [
                  {
                    "parameters": [],
                    "type": "function"
                  }
                ],
                "groupBy": [
                  {
                    "property": {
                      "type": "string"
                    },
                    "type": "groupBy"
                  }
                ],
                "limit": 50
              },
              "table": "china_railway",
              "timeColumn": "crawled_time",
              "timeColumnType": "timestamp",
              "where": [
                {
                  "name": "$__timeFilter",
                  "params": [],
                  "type": "macro"
                }
              ]
            }
          ],
          "title": "Station Maps",
          "type": "vonng-echarts-panel"
        }
      ],
      "title": "Legacy Station Map",
      "type": "row"
    }
  ],
  "refresh": "",
  "schemaVersion": 38,
  "style": "dark",
  "tags": [
    "ISD",
    "APP",
    "Overview"
  ],
  "templating": {
    "list": []
  },
  "time": {
    "from": "now-120y",
    "to": "now"
  },
  "timepicker": {
    "refresh_intervals": [
      "1d",
      "1w/w",
      "1M",
      "2M",
      "3M",
      "6M",
      "1y",
      "2y",
      "3y",
      "6y",
      "10y",
      "20y",
      "30y",
      "50y",
      "100y"
    ]
  },
  "timezone": "",
  "title": "ISD Overview",
  "uid": "isd-overview",
  "version": 76,
  "weekStart": ""
}